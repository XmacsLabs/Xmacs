diff --git a/src/Plugins/Qt/QTMApplication.hpp b/src/Plugins/Qt/QTMApplication.hpp
index 26fc7cfa4..7d0ad6adb 100644
--- a/src/Plugins/Qt/QTMApplication.hpp
+++ b/src/Plugins/Qt/QTMApplication.hpp
@@ -18,65 +18,6 @@
 #include "sys_utils.hpp"
 #include "url.hpp"
 
-
-#ifdef Q_OS_MAC
-
-#include <QMacPasteboardMime>
-
-// On MacOS we have to register appropriate mime types for PDF files
-// The QMacPasteboardMimePDF class is instantiated in QTMApplication
-// and provides the necessary support.
-//
-// code from:
-// https://www.lyx.org/trac/browser/lyxsvn/lyx-devel/trunk/src/frontends/qt4/GuiApplication.cpp?rev=24894
-
-// (mg) I'm not sure this is the right place to have this code, but well...
-
-class QMacPasteboardMimePDF : public QMacPasteboardMime
-{
-public:
-  QMacPasteboardMimePDF ()
-    : QMacPasteboardMime (MIME_QT_CONVERTOR | MIME_ALL)
-  {}
-
-  QString convertorName() { return "PDF"; }
-
-  QString flavorFor (QString const & mime)
-  {
-    if (mime == QLatin1String ("application/pdf"))
-      return QLatin1String ("com.adobe.pdf");
-    return QString();
-  }
-
-  QString mimeFor(QString flav)
-  {
-    if (flav == QLatin1String ("com.adobe.pdf"))
-      return QLatin1String ("application/pdf");
-    return QString ();
-  }
-
-  bool canConvert(QString const & mime, QString flav)
-  { return mimeFor (flav) == mime; }
-
-  QVariant convertToMime (QString const & mime, QList<QByteArray> data, QString flav)
-  {
-    (void) flav; (void) mime;
-    if (data.count () > 1)
-      debug_qt << "QMacPasteboardMimePDF: Cannot handle multiple member data " << LF;
-    return data.first ();
-  }
-
-  QList<QByteArray> convertFromMime (QString const & mime, QVariant data, QString flav)
-  {
-    (void) flav; (void) mime;
-    QList<QByteArray> ret;
-    ret.append (data.toByteArray ());
-    return ret;
-  }
-};
-#endif
-
-
 /*
  FIXME: We would like to do the following
  
@@ -103,10 +44,6 @@ public:
 class QTMApplication: public QApplication {
   Q_OBJECT
   
-#ifdef Q_OS_MAC
-  QMacPasteboardMimePDF mac_pasteboard_mime_pdf;
-#endif
-  
 public:
   QTMApplication (int& argc, char** argv) :
     QApplication (argc, argv) { }
diff --git a/src/Plugins/Qt/QTMMenuHelper.cpp b/src/Plugins/Qt/QTMMenuHelper.cpp
index 987eddee2..e354e39df 100644
--- a/src/Plugins/Qt/QTMMenuHelper.cpp
+++ b/src/Plugins/Qt/QTMMenuHelper.cpp
@@ -20,12 +20,12 @@
 #include "QTMMenuHelper.hpp"
 #include "QTMGuiHelper.hpp"
 #include "QTMStyle.hpp"
+#include "QTMApplication.hpp"
 #include "QTMTreeModel.hpp"
 
 #include <QToolTip>
 #include <QCompleter>
 #include <QKeyEvent>
-#include <QApplication>
 
 /******************************************************************************
  * QTMCommand
diff --git a/src/Plugins/Qt/QTMScrollView.cpp b/src/Plugins/Qt/QTMScrollView.cpp
index 770568016..cad3a90d1 100644
--- a/src/Plugins/Qt/QTMScrollView.cpp
+++ b/src/Plugins/Qt/QTMScrollView.cpp
@@ -12,13 +12,13 @@
 #include "message.hpp"
 
 #include "QTMScrollView.hpp"
+#include "QTMApplication.hpp"
 
 #include <QScrollBar>
 #include <QPainter>
 #include <QBoxLayout>
 #include <QPaintEvent>
 #include <QStyle>
-#include <QApplication>
 
 
 /*! Provide automatic centering of the working area inside the viewport.
diff --git a/src/Plugins/Qt/QTMStyle.cpp b/src/Plugins/Qt/QTMStyle.cpp
index afaa5cf88..26bdbbc17 100644
--- a/src/Plugins/Qt/QTMStyle.cpp
+++ b/src/Plugins/Qt/QTMStyle.cpp
@@ -13,13 +13,13 @@
 #include "renderer.hpp"
 
 #include "QTMStyle.hpp"
+#include "QTMApplication.hpp"
 
 #include <QStyleOptionMenuItem>
 #include <qdrawutil.h>
 #include <QPainter>
 #include <QPainterPath>
 #include <QMainWindow>
-#include <QApplication>
 
 int
 qt_zoom (int sz) {
diff --git a/src/Plugins/Qt/qt_dialogues.cpp b/src/Plugins/Qt/qt_dialogues.cpp
index 3fa77068f..d42b40163 100644
--- a/src/Plugins/Qt/qt_dialogues.cpp
+++ b/src/Plugins/Qt/qt_dialogues.cpp
@@ -21,6 +21,7 @@
 #include "converter.hpp"
 #include "QTMMenuHelper.hpp"
 #include "QTMGuiHelper.hpp"
+#include "QTMApplication.hpp"
 
 #include <QMessageBox>
 #include <QLabel>
@@ -33,8 +34,6 @@
 #include <QVector>
 #include <QPushButton>
 #include <QDialogButtonBox>
-#include <QApplication>
-
 
 #include "string.hpp"
 #include "scheme.hpp"
diff --git a/src/Plugins/Qt/qt_gui.cpp b/src/Plugins/Qt/qt_gui.cpp
index f9aa46ab3..7cc203209 100644
--- a/src/Plugins/Qt/qt_gui.cpp
+++ b/src/Plugins/Qt/qt_gui.cpp
@@ -46,11 +46,11 @@
 #include <QImage>
 #include <QUrl>
 #include <QDesktopWidget>
-#include <QApplication>
 
 #include "QTMGuiHelper.hpp"
 #include "QTMWidget.hpp"
 #include "QTMWindow.hpp"
+#include "QTMApplication.hpp"
 
 #ifdef MACOSX_EXTENSIONS
 #include "MacOS/mac_utilities.h"
@@ -500,7 +500,7 @@ void gui_interpose (void (*r) (void)) { the_interpose_handler = r; }
 
 void
 qt_gui_rep::event_loop () {
-  QCoreApplication* app = QApplication::instance ();
+  QTMApplication* app = static_cast<QTMApplication*>(QApplication::instance());
   update();
     //need_update();
   app->exec();
@@ -1039,10 +1039,9 @@ qt_gui_rep::put_graphics_on_clipboard (url file) {
     string filecontent;
     load_string (file, filecontent, true);
     
-    // warning: we need to tell Qt the size of the byte buffer
     c_string tmp (filecontent);
-    QByteArray rawdata (tmp, N(filecontent));
-
+    QByteArray rawdata (tmp);
+    
     QMimeData *mymimeData = new QMimeData;
     mymimeData->setData (mime, rawdata);
     
diff --git a/src/Plugins/Qt/qt_ui_element.cpp b/src/Plugins/Qt/qt_ui_element.cpp
index 305fb0ea6..8f7311487 100644
--- a/src/Plugins/Qt/qt_ui_element.cpp
+++ b/src/Plugins/Qt/qt_ui_element.cpp
@@ -28,12 +28,12 @@
 #include "QTMGuiHelper.hpp"
 #include "QTMMenuHelper.hpp"
 #include "QTMStyle.hpp"
+#include "QTMApplication.hpp"
 #include "QTMTreeModel.hpp"
 
 #include <QCheckBox>
 #include <QPushButton>
 #include <QSplitter>
-#include <QApplication>
 #include <QTreeView>
 
 
diff --git a/src/Plugins/Qt/qt_window_widget.cpp b/src/Plugins/Qt/qt_window_widget.cpp
index 3dc745870..68b7049b4 100644
--- a/src/Plugins/Qt/qt_window_widget.cpp
+++ b/src/Plugins/Qt/qt_window_widget.cpp
@@ -16,6 +16,7 @@
 #include "QTMWindow.hpp"
 #include "QTMGuiHelper.hpp"
 #include "QTMMenuHelper.hpp"
+#include "QTMApplication.hpp"
 
 #include "message.hpp"
 #include "analyze.hpp"
